// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersToTagsApp.Core.Context;

#nullable disable

namespace UsersToTagsApp.Core.Migrations
{
    [DbContext(typeof(UsersToTagsContext))]
    [Migration("20240303075828_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsersToTagsApp.Domain.Tags.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TagId");

                    b.ToTable("tags", (string)null);
                });

            modelBuilder.Entity("UsersToTagsApp.Domain.TagsToUsers.TagToUser", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("EntityId");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("tags_to_users", (string)null);
                });

            modelBuilder.Entity("UsersToTagsApp.Domain.Users.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("UsersToTagsApp.Domain.TagsToUsers.TagToUser", b =>
                {
                    b.HasOne("UsersToTagsApp.Domain.Tags.Tag", "Tag")
                        .WithMany("TagToUsers")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UsersToTagsApp.Domain.Users.User", "User")
                        .WithMany("TagToUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UsersToTagsApp.Domain.Tags.Tag", b =>
                {
                    b.Navigation("TagToUsers");
                });

            modelBuilder.Entity("UsersToTagsApp.Domain.Users.User", b =>
                {
                    b.Navigation("TagToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
